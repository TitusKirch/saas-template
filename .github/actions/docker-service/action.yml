
name: Docker service
description: Docker job for an service

inputs:
  service_name:
    description: "Name of the service"
    required: true
  push_image:
    description: "Push Docker image"
    required: false
    default: "false"
  docker_registry:
    description: "Docker registry"
    required: true
  docker_registry_username:
    description: "Docker registry username"
    required: true
  docker_registry_password:
    description: "Docker registry password"
    required: true
  docker_image_tag:
    description: "Docker image tag"
    required: false
    default: ""
  docker_image_tag_latest:
    description: "Docker image tag latest"
    required: false
    default: "false"
  
runs:
  using: "composite"
  steps:    
    - name: Login to GitHub container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.docker_registry }}
        username: ${{ inputs.docker_registry_username }}
        password: ${{ inputs.docker_registry_password }}

    - name: Setup QEMU
      uses: docker/setup-qemu-action@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./services/Dockerfile
        load: true
        tags: ${{ inputs.docker_registry }}/tituskirch/${{ inputs.service_name }}:test
        build-args: |
          SERVICE_NAME=@tituskirch/${{ inputs.service_name }}
          SERVICE_PATH=services/${{ inputs.service_name }}
        cache-from: type=gha
        cache-to: type=local,mode=max,dest=/tmp/${{ inputs.service_name }}-docker-cache
      
    - name: Start Docker container
      shell: bash
      run: |
        docker run -d --rm -p 3000:3000 ${{ inputs.docker_registry }}/tituskirch/${{ inputs.service_name }}:test
      id: start_container

    - name: Wait for docker container to start
      shell: bash
      run: |
        counter=0
        while ! nc -z localhost 8000; do
            sleep 1
            counter=$((counter + 1))
            if [ $counter -ge 30 ]; then
                echo "Service didn't start within 30 seconds, exiting."
                exit 1
            fi
        done

    - name: Stop Docker container
      shell: bash
      if: success()
      run: |
        docker stop $(docker ps -q --filter ancestor="${{ inputs.docker_registry }}/tituskirch/${{ inputs.service_name }}:test")
    
    - name: Generate Docker image tags
      shell: bash
      id: generate_docker_image_tags
      run: |
        tags="${{ inputs.docker_registry }}/tituskirch/${{ inputs.service_name }}:${{ inputs.docker_image_tag }}"

        if [ "${{ inputs.docker_image_tag_latest }}" == "true" ]; then
          tags="${tags}, ${{ inputs.docker_registry }}/tituskirch/${{ inputs.service_name }}:latest"
        fi

        echo "tags=$tags" >> $GITHUB_OUTPUT
  
    - name: Push Docker image
      if: inputs.push_image == 'true' && inputs.docker_image_tag != ''
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./services/Dockerfile
        push: true
        tags: ${{ steps.generate_docker_image_tags.outputs.tags }}
        # platforms: linux/amd64,linux/arm64 (wait for arm workers and then ignore amd64)
        build-args: |
          SERVICE_NAME=@tituskirch/${{ inputs.service_name }}
          SERVICE_PATH=services/${{ inputs.service_name }}
        cache-from: type=local,src=/tmp/${{ inputs.service_name }}-docker-cache
        cache-to: type=gha,mode=max